.legend {
    @include clearfix;
}

.legend-pt-box {
    @include content-box-rounded(60px, 80px, $ltblue, darken($ltblue, 10), $box-radius);
    //width: 60px!important;
    // height: 80px!important;
    margin: 0 auto;
    position: relative;
    @media (min-width: $screen-sm) {
        width: 80px!important;
        height: 100px!important;
    }
}

.legend-text {
    font-size: 40px;
    font-size: 2.5em;
    color: $ltgrey;
    @media (min-width: $screen-sm) {
        font-size: 48px;
        font-size: 3em;
    }
}

.legend-desc {
    position: absolute;
    display: inline-block;
    color: $ltgrey;
}

.symbol-desc {
    top: 53px;
    left: 65%;
}

.name-desc {
    top: 80px;
    left: 65%;
}

.weight-desc {
    top: 80px;
    right: 65%;
}

.number-desc {
    top: 25px;
    right: 65%;
}

.electron-desc {
    top: 25px;
    left: 65%;
}

.legend-symbol {
    text-align: center;
    padding-top: 30%;
    font-size: 29px;
    font-size: 2.9rem;
    font-weight: bold;
    line-height: 1;
}

.legend-name {
    font-style: italic;
    font-size: 8px;
    font-size: .8rem;
}

.legend-weight {
    font-size: 8px;
    font-size: .8rem;
}

.symbol-label-wrapper {
    .symbol, .legend-symbol {
        text-align: center;
        padding-top: 30%;
        font-size: 20px;
        font-size: 2rem;
        font-weight: bold;
        line-height: 1;
        @media (min-width: $screen-md) {
            font-size: 27px;
            font-size: 2.7rem;
        }
        @media (min-width: $screen-lg) {
            font-size: 29px;
            font-size: 2.9rem;
        }
    }
} //symbol-balel-wrapper
.name-label-wrapper {
    margin: 0 auto;
    text-align: center;
    .name, .weight, .legend-name, .legend-weight {
        line-height: .8;
    }
    .name,
    .legend-name {
        font-style: italic;
        font-size: 10px;
        font-size: 1rem;
        margin-bottom: 10px;
        margin-bottom: 1rem;
        @media (min-width: $screen-lg) {
           margin-bottom: 12px;
        margin-bottom: 1.2rem;
        }
    }
    .lan
    {
        margin-top: 43px;
        padding-bottom: 2px;
        @media (min-width: $screen-md) {
           margin-top: 57px;
        padding-bottom: 1px;
        }
        @media (min-width: $screen-lg) {
           margin-top: 62px;
            padding-bottom: 0;
        }
    }
    .weight,
    .legend-weight {
        font-size: 8px;
        font-size: .8rem;
    }
} //name label wrapper
.number-label-wrapper {
    position: absolute;
    top: 6%;
    left: 4%;
    .number, .legend-number {
        line-height: .8;
        font-size: 12px;
        font-size: 1.2rem;
        @media (min-width: $screen-md) {
            font-size: 15px;
            font-size: 1.5rem;
        }
        @media (min-width: $screen-lg) {
            font-size: 18px;
            font-size: 1.8rem;
        }
    }
} //number label wrapper
.electron-label-wrapper {
    position: absolute;
    top: 10%;
    right: 4%;
    .electron, .legend-electron {
        font-size: 10px;
        font-size: 1rem;
        margin-bottom: 0;
        line-height: 1;
    }
} //electron-label-wrapper
//START TRANSITIONS FOR PT LABELS
.symbol-label-wrapper {
    .symbol {
        @include transition(all .35s ease-in-out);
    }
} //symbol-balel-wrapper
.name-label-wrapper {
    .name, .weight {
        @include transition(all .35s ease-in-out);
    }
} //name label wrapper
.number-label-wrapper {
    .number {
        @include transition(all .35s ease-in-out);
    }
} //number label wrapper
.electron-label-wrapper {
    .electron {
        @include transition(all .35s ease-in-out);
    }
} //electron-label-wrapper
//END TRANSISTIONS
.span1,
.span1-last {
    height: $box-height;
    position: relative;
}

.span1 {
    @include span(1 of 18);
}

.span1-last {
    @include span(1 of 18 last);
}

.push3 {
    margin-left: span(3 of 18);
}

.push10 {
    margin-left: span(10 of 18);
}

.pt-box {
    @include content-box-rounded(span(1 of 18), 100%, $white, $white, $box-radius);
    //margin:1px;
    cursor: pointer;
    @include opacity(.85);
    @include transition(all .35s ease-in-out);
    @include transform(perspective(1000px) translate3d(0, 0, 0));
    overflow-y:visible;
    &:hover {
        @include opacity(1);
        @include transform(perspective(1000px) translate3d(0, 0, 21px));
        box-shadow: 0 3px 15px rgba(0, 0, 0, 0.4);
    }
    //children
    &:hover .symbol,
    &:hover .name,
    &:hover .weight &:hover .number {
        @include transition(all .35s ease-in-out);
        @include transform(scale3d(0.9, 0.9, 1));
    }
    min-height: $box-min-height-xs;
    @media (min-width: $screen-sm) {
        min-height: $box-min-height-sm;
    }
    @media (min-width: $screen-md) {
        min-height: $box-min-height-md;
    }
    @media (min-width: $screen-lg) {
        min-height: $box-min-height-lg;
    }
    @media (min-width: $screen-xl) {
        min-height: $box-min-height-xl;
    }
}

.pt-box-1
/*non-metails*/

{
    @include content-box-rounded(span(1 of 18), 100%, $dkgreenyellow, darken($dkgreenyellow, 10), $box-radius);
}

.pt-box-2
/*noble gasses*/

{
    @include content-box-rounded(span(1 of 18), 100%, $ltblue, darken($ltblue, 10), $box-radius);
}

.pt-box-3
/*alkalia metals*/

{
    @include content-box-rounded(span(1 of 18), 100%, $dkred, darken($dkred, 10), $box-radius);
}

.pt-box-4
/*akalai earth*/

{
    @include content-box-rounded(span(1 of 18), 100%, $dkbrownred, darken($dkbrownred, 10), $box-radius);
}

.pt-box-5
/*basic metals*/

{
    @include content-box-rounded(span(1 of 18), 100%, $dkblue, darken($dkblue, 10), $box-radius);
}

.pt-box-6
/*semi-metals*/

{
    @include content-box-rounded(span(1 of 18), 100%, $ltgreen, darken($ltgreen, 10), $box-radius);
}

.pt-box-7
/*halogens*/

{
    @include content-box-rounded(span(1 of 18), 100%, $dkgreen, darken($dkgreen, 10), $box-radius);
}

.pt-box-8
/*transtion*/

{
    @include content-box-rounded(span(1 of 18), 100%, $dkpink, darken($dkpink, 10), $box-radius);
}

.pt-box-9
/*lanathide*/

{
    @include content-box-rounded(span(1 of 18), 100%, $ltpink, darken($ltpink, 10), $box-radius);
}

.pt-box-10
/*actinide*/

{
    @include content-box-rounded(span(1 of 18), 100%, $ltorange, darken($ltorange, 10), $box-radius);
}

.pt-box-11
/*lanathide actinide spacer*/

{
    @include content-box-rounded(span(1 of 18), 100%, $ltpink, darken($ltpink, 10), $box-radius);
}

.pt-box-12
/*metaloids*/

{
    @include content-box-rounded(span(1 of 18), 100%, $ltgreen, darken($ltgreen, 10), $box-radius);
}

.flexcontainer {
    max-width: 768px;
    position: relative;
    @media (min-width: $screen-sm) {
        max-width: $screen-sm;
    }
    @media (min-width: $screen-md) {
        max-width: $screen-md;
    }
    @media (min-width: $screen-lg) {
        max-width: $screen-lg;
    }
    @media (min-width: $screen-xl) {
        max-width: $screen-xl;
    }
}

.divider {
    border: none;
    margin: $margin-sm-px 0;
}

.focus-box {
    min-width: $box-min-width-xs*1.5; //all boxes should have these min/maxes
    max-width: $box-max-width-xs*1.5;
    min-height: $box-min-height-xs*1.5;
    @media (min-width: $screen-sm) {
        min-width: $box-min-width-sm*1.5; //all boxes should have these min/maxes
        max-width: $box-max-width-sm*1.5;
        min-height: $box-min-height-sm*1.5;
    }
    @media (min-width: $screen-md) {
        min-width: $box-min-width-md*1.5; //all boxes should have these min/maxes
        max-width: $box-max-width-md*1.5;
        min-height: $box-min-height-md*1.5;
    }
    @media (min-width: $screen-lg) {
        min-width: $box-min-width-lg*1.5; //all boxes should have these min/maxes
        max-width: $box-max-width-lg*1.5;
        min-height: $box-min-height-lg*1.5;
    }
    @media (min-width: $screen-xl) {
        min-width: $box-min-width-xl*1.5; //all boxes should have these min/maxes
        max-width: $box-max-width-xl*1.5;
        min-height: $box-min-height-xl*1.5;
    }
}

.icon-btn {
    //color:$black; // put a piece of text in here to force btn height == to text btns
    &:before {
        //content:"\00a0"; // put a piece of text in here to force btn height == to text btns
    }
    &:hover,
    &:focus,
    &:visited {
        @include transition(all .35s ease-in-out);
        outline: none; //why? when this is already in resets?
        //color:lighten($black, 10%);
    }
    &:visited {
        @include background($black);
    }
}

.show-for-sr {
    position: absolute !important;
    top: -9999px !important;
    left: -9999px !important;
}

.search-input {
    width: 250px !important; //stupid foundation
    height: 40px !important;
    float: left !important;
    margin-right: 2px !important;
    font-family: 'Asap', sans-serif !important;
    font-size: 16px !important;
    font-size: 1.6rem !important;
    &:focus
    {
        background   : rgba(0,0,0,.1) !important;
    }
}

.sort-label
{
      display: inline-block;
  font-size: 1.6rem;
  margin: 0 12px 0 24px;
}